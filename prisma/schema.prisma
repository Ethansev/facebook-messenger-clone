// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
     provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// might need to redo all these models

// Prisma does not allow me to specify names for implicit many-to-many relation table columns yet :'(
model User {
    id             Int       @id @default(autoincrement())
    name           String?
    email          String?   @unique
    emailVerified  DateTime?
    image          String?
    hashedPassword String?
    createdAt      DateTime  @default(now())
    updatedAt      DateTime  @updatedAt

    conversations Conversation[] @relation("UserToConversation")
    seenMessages  Message[]      @relation("UserToMessage")

    accounts Account[]
    messages Message[]
}

model Account {
    id                Int     @id @default(autoincrement())
    userId            Int
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Conversation {
    id            Int      @id @default(autoincrement())
    createdAt     DateTime @default(now())
    lastMessageAt DateTime @default(now())
    name          String?
    isGroup       Boolean?

    users    User[]    @relation("UserToConversation")
    messages Message[] @relation("ConversationToMessage")

    @@unique([id])
}

model Message {
    id        Int      @id @default(autoincrement())
    body      String?
    image     String?
    createdAt DateTime @default(now())

    seen           User[]       @relation("UserToMessage")
    conversation   Conversation @relation("ConversationToMessage", fields: [conversationId], references: [id])
    conversationId Int

    sender   User @relation(fields: [senderId], references: [id], onDelete: Cascade)
    senderId Int

    @@unique([conversationId, id])
}
